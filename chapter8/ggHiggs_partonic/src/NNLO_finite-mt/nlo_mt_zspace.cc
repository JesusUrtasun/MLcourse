//// (mH/mt)^0
double coeff_nlo_gg_0_0[27] = {6.0, -3.0, 11.0, 0, 4.2, 6.3, 7.757142857142857143, 8.892857142857142857, 9.830952380952380953, 10.633333333333333333, 11.3359307359307359304, 11.9616883116883116886, 12.526257076257076257, 13.040842490842490842, 13.51376956376956377, 13.951406926406926407, 14.358743707273119038, 14.739766116236704472, 15.097712452666013037, 15.435251152356415514, 15.754608368927254376, 16.057661456190867955, 16.346008806780781475, 16.62102292309924562, 16.883891359011159792, 17.13564873207288068, 17.377202057974032667 };
double coeff_nlo_qg_0_0[27] = {0.6666666666666666667, 0, 0, 0.8888888888888888889, 1.3888888888888888889, 1.7444444444444444444, 2.0222222222222222222, 2.2507936507936507937, 2.4452380952380952381, 2.6145502645502645502, 2.7645502645502645503, 2.8992303992303992304, 3.0214526214526214525, 3.1333407333407333408, 3.2365153365153365153, 3.332241832241832242, 3.4215275465275465277, 3.5051876772465007759, 3.5838913809502044795, 3.6581947865229598976, 3.7285651568933302678, 3.795398907937607628, 3.8590352715739712644, 3.919766810566379822, 3.977847618647187903, 4.0334997925602313813, 4.0869185959790348 };
double coeff_nlo_qq_0_0[27] = {0, 0, 0, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852, 1.1851851851851851852 };
double coeff_nlo_gg_0_1[27] = {-12.0, 24.0, 0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0 };
double coeff_nlo_qg_0_1[27] = {1.3333333333333333334, 1.3333333333333333334, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667, 2.6666666666666666667 };
double coeff_nlo_qq_0_1[27] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
//// (mH/mt)^1
double coeff_nlo_gg_1_0[27] = {0, -0.15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
double coeff_nlo_qg_1_0[27] = {0, -0.122222222222222222225, -0.24444444444444444445, -0.4074074074074074074, -0.57037037037037037035, -0.73333333333333333335, -0.8962962962962962963, -1.0592592592592592592, -1.2222222222222222222, -1.3851851851851851851, -1.5481481481481481481, -1.7111111111111111111, -1.874074074074074074, -2.037037037037037037, -2.2, -2.362962962962962963, -2.5259259259259259258, -2.688888888888888889, -2.8518518518518518518, -3.0148148148148148147, -3.1777777777777777778, -3.3407407407407407407, -3.5037037037037037036, -3.6666666666666666667, -3.8296296296296296296, -3.9925925925925925925, -4.1555555555555555554 };
double coeff_nlo_qq_1_0[27] = {0, 0, 0, 0.21728395061728395062, 0.43456790123456790124, 0.65185185185185185185, 0.8691358024691358025, 1.0864197530864197531, 1.3037037037037037037, 1.5209876543209876543, 1.738271604938271605, 1.9555555555555555556, 2.1728395061728395061, 2.3901234567901234569, 2.6074074074074074074, 2.8246913580246913581, 3.0419753086419753087, 3.2592592592592592592, 3.47654320987654321, 3.6938271604938271604, 3.9111111111111111112, 4.1283950617283950617, 4.3456790123456790122, 4.5629629629629629628, 4.7802469135802469137, 4.9975308641975308642, 5.2148148148148148148 };
double coeff_nlo_gg_1_1[27] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
double coeff_nlo_qg_1_1[27] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
double coeff_nlo_qq_1_1[27] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
//// (mH/mt)^2
double coeff_nlo_gg_2_0[27] = {};
double coeff_nlo_qg_2_0[27] = {0, -0.005568783068783068783, 3.935185185185185185E-4, 0.016030643738977072311, 0.0451207010582010582, 0.08766369047619047619, 0.14365961199294532628, 0.21310846560846560847, 0.29601025132275132274, 0.39236496913580246913, 0.50217261904761904763, 0.6254332010582010582, 0.7621467151675485009, 0.91231316137566137567, 1.0759325396825396825, 1.2530048500881834215, 1.4435300925925925926, 1.6475082671957671957, 1.864939373897707231, 2.0958234126984126985, 2.3401603835978835979, 2.5979502865961199294, 2.869193121693121693, 3.1538888888888888889, 3.4520375881834215168, 3.7636392195767195768, 4.0886937830687830686 };
double coeff_nlo_qq_2_0[27] = {0, 0, 0, 0.050899470899470899472, 0.14279835390946502058, 0.2756966490299823633, 0.4495943562610229277, 0.6644914756025867137, 0.92038800705467372135, 1.2172839506172839506, 1.5551793062904174015, 1.9340740740740740741, 2.3539682539682539682, 2.814861845972957084, 3.3167548500881834214, 3.8596472663139329807, 4.4435390946502057613, 5.0684303350970017635, 5.7343209876543209877, 6.4412110523221634334, 7.1891005291005291005, 7.9779894179894179896, 8.8078777189888301, 9.678765432098765432, 10.590652557319223986, 11.543539094650205761, 12.537425044091710758 };
double coeff_nlo_gg_2_1[27] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
double coeff_nlo_qg_2_1[27] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
double coeff_nlo_qq_2_1[27] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
//// (mH/mt)^3
double coeff_nlo_gg_3_0[27] = {0, 0.0025252976190476190476, 0.0044791666666666666666, 0.0120649801587301587305, 0.025329365079365079365, 0.046188988095238095238, 0.07656051587301587302, 0.11836061507936507937, 0.17350595238095238095, 0.24391319444444444444, 0.33149900793650793651, 0.4381800595238095238, 0.565873015873015873, 0.7164945436507936508, 0.8919613095238095238, 1.0941899801587301588, 1.3250972222222222222, 1.5865997023809523809, 1.8806140873015873016, 2.2090570436507936509, 2.5738452380952380953, 2.9768953373015873017, 3.4201240079365079366, 3.9054479166666666667, 4.4347837301587301586, 5.0100481150793650794, 5.633157738095238095 };
double coeff_nlo_qg_3_0[27] = {0, -6.143077601410934744E-4, -3.3184523809523809524E-4, -8.6972736625514403294E-4, -0.003386068856554967666, -0.009544449955908289242, -0.021008450911228689007, -0.039441651969429747207, -0.066507633377425044094, -0.103869975382128159906, -0.1531922582304526749, -0.21613806216931216931, -0.2943709674456202234, -0.3895545543062904174, -0.5033524029982363316, -0.63742809376837154616, -0.79344520686360964137, -0.97306732253086419756, -1.1779580210170487949, -1.4097808825690770135, -1.6701994874338624338, -1.9608774158583186361, -2.2834782480893592005, -2.6396655643738977071, -3.0311029449588477367, -3.459453970091122869, -3.9263822200176366844 };
double coeff_nlo_qq_3_0[27] = {0, 0, 0, 0.0123464628649813835, 0.044013129531648050166, 0.103065843621399176956, 0.19757044875563394081, 0.33559278855575151872, 0.5251987066431510876, 0.77445404663923182444, 1.0914246521653929061, 1.4841763668430335097, 1.960775034293552812, 2.52928649813834999, 3.197776601998824221, 3.9743111894963746816, 4.8669561042524005488, 5.8837771898883009995, 7.0328402900254752108, 8.322211248285322359, 9.759955908289241622, 11.354140113658632177, 13.1128297080148932, 15.044090534979423868, 17.155988438173623359, 19.456589261218890848, 21.953958847736625514 };
double coeff_nlo_gg_3_1[27] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
double coeff_nlo_qg_3_1[27] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
double coeff_nlo_qq_3_1[27] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

double gg_nlo_mt_delta(double mH, double mt, double muF_mH_ratio) {
  double res =  (Pi*Pi)+_W1t;
  return res;
}

double gg_nlo_mt_distr(double z, double mH, double mt, double muF_mH_ratio) {
  double l1z = log(1.-z);
  double res = -12.0*1.0/( z-1.0)*l1z;
  return res;
}

double gg_nlo_mt_reg(double z, double mH, double mt, double muF_mH_ratio) {
  double xht = mH*mH/mt/mt;
  double l1z = log(1.-z);
  double res = 0;
  for(int k=0; k<27; k++) {
    res += coeff_nlo_gg_0_0[k] * pow(1-z,k) * pow(l1z,0) * pow(xht,0);
    res += coeff_nlo_gg_0_1[k] * pow(1-z,k) * pow(l1z,1) * pow(xht,0);
    res += coeff_nlo_gg_1_0[k] * pow(1-z,k) * pow(l1z,0) * pow(xht,1);
    res += coeff_nlo_gg_1_1[k] * pow(1-z,k) * pow(l1z,1) * pow(xht,1);
    res += coeff_nlo_gg_2_0[k] * pow(1-z,k) * pow(l1z,0) * pow(xht,2);
    res += coeff_nlo_gg_2_1[k] * pow(1-z,k) * pow(l1z,1) * pow(xht,2);
    res += coeff_nlo_gg_3_0[k] * pow(1-z,k) * pow(l1z,0) * pow(xht,3);
    res += coeff_nlo_gg_3_1[k] * pow(1-z,k) * pow(l1z,1) * pow(xht,3);
  }
  return res;
}

double qg_nlo_mt(double z, double mH, double mt, double muF_mH_ratio) {
  double xht = mH*mH/mt/mt;
  double l1z = log(1.-z);
  double res = 0;
  for(int k=0; k<27; k++) {
    res += coeff_nlo_qg_0_0[k] * pow(1-z,k) * pow(l1z,0) * pow(xht,0);
    res += coeff_nlo_qg_0_1[k] * pow(1-z,k) * pow(l1z,1) * pow(xht,0);
    res += coeff_nlo_qg_1_0[k] * pow(1-z,k) * pow(l1z,0) * pow(xht,1);
    res += coeff_nlo_qg_1_1[k] * pow(1-z,k) * pow(l1z,1) * pow(xht,1);
    res += coeff_nlo_qg_2_0[k] * pow(1-z,k) * pow(l1z,0) * pow(xht,2);
    res += coeff_nlo_qg_2_1[k] * pow(1-z,k) * pow(l1z,1) * pow(xht,2);
    res += coeff_nlo_qg_3_0[k] * pow(1-z,k) * pow(l1z,0) * pow(xht,3);
    res += coeff_nlo_qg_3_1[k] * pow(1-z,k) * pow(l1z,1) * pow(xht,3);
  }
  return res;
}

double qqb_nlo_mt(double z, double mH, double mt, double muF_mH_ratio) {
  double xht = mH*mH/mt/mt;
  double l1z = log(1.-z);
  double res = 0;
  for(int k=0; k<27; k++) {
    res += coeff_nlo_qq_0_0[k] * pow(1-z,k) * pow(l1z,0) * pow(xht,0);
    res += coeff_nlo_qq_0_1[k] * pow(1-z,k) * pow(l1z,1) * pow(xht,0);
    res += coeff_nlo_qq_1_0[k] * pow(1-z,k) * pow(l1z,0) * pow(xht,1);
    res += coeff_nlo_qq_1_1[k] * pow(1-z,k) * pow(l1z,1) * pow(xht,1);
    res += coeff_nlo_qq_2_0[k] * pow(1-z,k) * pow(l1z,0) * pow(xht,2);
    res += coeff_nlo_qq_2_1[k] * pow(1-z,k) * pow(l1z,1) * pow(xht,2);
    res += coeff_nlo_qq_3_0[k] * pow(1-z,k) * pow(l1z,0) * pow(xht,3);
    res += coeff_nlo_qq_3_1[k] * pow(1-z,k) * pow(l1z,1) * pow(xht,3);
  }
  return res;
}

double gg_nlo_infmt_distr(double z, double mH, double mt, double muF_mH_ratio) {
  double l1z = log(1.-z);
  double res = -12.0*1.0/( z-1.0)*l1z;
  return res;
}

double gg_nlo_infmt_reg(double z, double mH, double mt, double muF_mH_ratio) {
  double l1z = log(1.-z);
  double res = 0;
  for(int k=0; k<27; k++) {
    res += coeff_nlo_gg_0_0[k] * pow(1-z,k) * pow(l1z,0);
    res += coeff_nlo_gg_0_1[k] * pow(1-z,k) * pow(l1z,1);
  }
  return res;
}

double qg_nlo_infmt(double z, double mH, double mt, double muF_mH_ratio) {
  double l1z = log(1.-z);
  double res = 0;
  for(int k=0; k<27; k++) {
    res += coeff_nlo_qg_0_0[k] * pow(1-z,k) * pow(l1z,0);
    res += coeff_nlo_qg_0_1[k] * pow(1-z,k) * pow(l1z,1);
  }
  return res;
}

double qqb_nlo_infmt(double z, double mH, double mt, double muF_mH_ratio) {
  double l1z = log(1.-z);
  double res = 0;
  for(int k=0; k<27; k++) {
    res += coeff_nlo_qq_0_0[k] * pow(1-z,k) * pow(l1z,0);
    res += coeff_nlo_qq_0_1[k] * pow(1-z,k) * pow(l1z,1);
  }
  return res;
}

